{"version":3,"sources":["Food.js","Snake.js","Nav.js","Start.js","App.js","index.js"],"names":["food","props","styleFood","left","dot","top","className","style","snake","snakeDots","map","i","styleSnake","key","Nav","onClick","start","stop","randomCoordinates","Math","floor","random","initialState","speed","direction","Start","state","handleStart","event","preventDefault","speedSnake","setInterval","moveSnake","document","onkeydown","onKeyDown","console","log","handleStop","clearInterval","setState","e","window","keyCode","dots","headSnake","length","push","shift","checkIfEat","head","enlargeSnake","increaseSpeed","newSnake","unshift","checkBorders","gameOver","checkCollapsed","pop","forEach","alert","this","Snake","Food","Component","App","root","getElementById","ReactDOM","render"],"mappings":"iNAUeA,EARF,SAAAC,GACX,IAAMC,EAAY,CAChBC,KAAK,GAAD,OAAKF,EAAMG,IAAI,GAAf,KACJC,IAAI,GAAD,OAAKJ,EAAMG,IAAI,GAAf,MAEL,OAAO,yBAAKE,UAAU,aAAaC,MAAOL,KCQ7BM,EAbD,SAAAP,GACZ,OACE,6BACGA,EAAMQ,UAAUC,KAAI,SAACN,EAAKO,GACzB,IAAMC,EAAa,CACjBT,KAAK,GAAD,OAAKC,EAAI,GAAT,KACJC,IAAI,GAAD,OAAKD,EAAI,GAAT,MAEL,OAAO,yBAAKE,UAAU,YAAYO,IAAKF,EAAGJ,MAAOK,SCK1CE,EAbH,SAAAb,GACV,OACE,0BAAMK,UAAU,QACd,4BAAQA,UAAU,gBAAgBS,QAASd,EAAMe,OAAjD,SAGA,4BAAQV,UAAU,eAAeS,QAASd,EAAMgB,MAAhD,UCHAC,EAAoB,WAMxB,MAAO,CAH2D,EAA1DC,KAAKC,OAAO,GAAAD,KAAKE,SAFf,GAEmD,GACK,EAA1DF,KAAKC,OAAO,GAAAD,KAAKE,SAHf,GAGmD,KAKzDC,EAAe,CACnBtB,KAAMkB,IACNK,MAAO,IACPC,UAAW,QACXf,UAAW,CACT,CAAC,EAAG,GACJ,CAAC,EAAG,KA0IOgB,E,2MArIbC,MAAQJ,E,EAERK,YAAc,SAAAC,GACZA,EAAMC,iBACN,IAAIC,EAAa,EAAKJ,MAAMH,MAC5BQ,YAAY,EAAKC,UAAWF,GAC5BG,SAASC,UAAY,EAAKC,UAC1BC,QAAQC,IAAI,yC,EAGdC,WAAa,SAAAV,GACXA,EAAMC,iBACNU,cAAc,EAAKP,WACnB,EAAKQ,SAAS,CACZjB,MAAO,MAETa,QAAQC,IAAI,iBAAkB,EAAKX,MAAMH,Q,EAS3CY,UAAY,SAAAM,GAEV,QADAA,EAAIA,GAAKC,OAAOd,OACNe,SACR,KAAK,GACH,EAAKH,SAAS,CAAEhB,UAAW,SAC3B,MACF,KAAK,GACH,EAAKgB,SAAS,CAAEhB,UAAW,OAC3B,MACF,KAAK,GACH,EAAKgB,SAAS,CAAEhB,UAAW,UAC3B,MACF,KAAK,GACH,EAAKgB,SAAS,CAAEhB,UAAW,SAC3B,MACF,QACE,S,EAINQ,UAAY,WACV,IAAIY,EAAI,YAAO,EAAKlB,MAAMjB,WACtBoC,EAAYD,EAAKA,EAAKE,OAAS,GAEnC,OAAQ,EAAKpB,MAAMF,WACjB,IAAK,OACHqB,EAAY,CAACA,EAAU,GAAK,EAAGA,EAAU,IACzC,MACF,IAAK,KACHA,EAAY,CAACA,EAAU,GAAIA,EAAU,GAAK,GAC1C,MACF,IAAK,QACHA,EAAY,CAACA,EAAU,GAAK,EAAGA,EAAU,IACzC,MACF,IAAK,OACHA,EAAY,CAACA,EAAU,GAAIA,EAAU,GAAK,GAC1C,MACF,QACE,OAEJD,EAAKG,KAAKF,GACVD,EAAKI,QACL,EAAKR,SAAS,CACZ/B,UAAWmC,K,EAIfK,WAAa,WACX,IAAIC,EAAO,EAAKxB,MAAMjB,UAAU,EAAKiB,MAAMjB,UAAUqC,OAAS,GAC1D9C,EAAO,EAAK0B,MAAM1B,KAClBkD,EAAK,KAAOlD,EAAK,IAAMkD,EAAK,KAAOlD,EAAK,KAC1C,EAAKwC,SAAS,CACZxC,KAAMkB,MAER,EAAKiC,eACL,EAAKC,kB,EAITD,aAAe,WACb,IAAIE,EAAQ,YAAO,EAAK3B,MAAMjB,WAC9B4C,EAASC,QAAQ,IACjB,EAAKd,SAAS,CACZ/B,UAAW4C,K,EAIfE,aAAe,WACb,IAAIL,EAAO,EAAKxB,MAAMjB,UAAU,EAAKiB,MAAMjB,UAAUqC,OAAS,IAC1DI,EAAK,IAAM,KAAOA,EAAK,IAAM,KAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,IAC/D,EAAKM,Y,EAGTC,eAAiB,WACf,IAAIjD,EAAK,YAAO,EAAKkB,MAAMjB,WACvByC,EAAO1C,EAAMA,EAAMsC,OAAS,GAChCtC,EAAMkD,MACNlD,EAAMmD,SAAQ,SAAAvD,GACR8C,EAAK,KAAO9C,EAAI,IAAM8C,EAAK,KAAO9C,EAAI,IACxC,EAAKoD,e,EAKXJ,cAAgB,WACV,EAAK1B,MAAMH,OAAS,IACtB,EAAKiB,SAAS,CACZjB,MAAO,EAAKG,MAAMH,MAAQ,IAG9Ba,QAAQC,IAAI,EAAKX,MAAMH,Q,EAGzBiC,SAAW,WACTI,MAAM,8BAAD,OAA+B,EAAKlC,MAAMjB,UAAUqC,SACzD,EAAKN,SAASlB,I,oFApGduC,KAAKN,eACLM,KAAKZ,aACLY,KAAKJ,mB,+BAsGL,OACE,6BACE,kBAAC,EAAD,CAAKzC,MAAO6C,KAAKlC,YAAaV,KAAM4C,KAAKvB,aACzC,kBAACwB,EAAD,CAAOrD,UAAWoD,KAAKnC,MAAMjB,YAC7B,kBAACsD,EAAD,CAAM3D,IAAKyD,KAAKnC,MAAM1B,Y,GAjIVgE,aCXLC,MARf,WACE,OACE,yBAAK3D,UAAU,cACb,kBAAC,EAAD,QCJA4D,EAAOjC,SAASkC,eAAe,QAErCC,IAASC,OAAO,kBAAC,EAAD,MAASH,I","file":"static/js/main.88c0e982.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst food = props => {\r\n  const styleFood = {\r\n    left: `${props.dot[0]}%`,\r\n    top: `${props.dot[1]}%`\r\n  };\r\n  return <div className=\"snake-food\" style={styleFood}></div>;\r\n};\r\n\r\nexport default food;\r\n","import React from \"react\";\r\n\r\nconst snake = props => {\r\n  return (\r\n    <div>\r\n      {props.snakeDots.map((dot, i) => {\r\n        const styleSnake = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`\r\n        };\r\n        return <div className=\"snake-dot\" key={i} style={styleSnake}></div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default snake;\r\n","import React from \"react\";\r\n\r\nconst Nav = props => {\r\n  return (\r\n    <form className=\"form\">\r\n      <button className=\"button__start\" onClick={props.start}>\r\n        Start\r\n      </button>\r\n      <button className=\"button__stop\" onClick={props.stop}>\r\n        Stop\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport Food from \"./Food\";\r\nimport Snake from \"./Snake\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst randomCoordinates = () => {\r\n  let min = 1;\r\n  let max = 99;\r\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n\r\n  return [x, y];\r\n};\r\n\r\nconst initialState = {\r\n  food: randomCoordinates(),\r\n  speed: 100,\r\n  direction: \"Right\",\r\n  snakeDots: [\r\n    [2, 2],\r\n    [4, 2]\r\n  ]\r\n};\r\n\r\nclass Start extends Component {\r\n  state = initialState;\r\n\r\n  handleStart = event => {\r\n    event.preventDefault();\r\n    let speedSnake = this.state.speed;\r\n    setInterval(this.moveSnake, speedSnake);\r\n    document.onkeydown = this.onKeyDown;\r\n    console.log(\"Lllllllets get ready to rumbleee !!!\");\r\n  };\r\n\r\n  handleStop = event => {\r\n    event.preventDefault();\r\n    clearInterval(this.moveSnake);\r\n    this.setState({\r\n      speed: 10000\r\n    });\r\n    console.log(\"Stop, speed =>\", this.state.speed);\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.checkBorders();\r\n    this.checkIfEat();\r\n    this.checkCollapsed();\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 37:\r\n        this.setState({ direction: \"Left\" });\r\n        break;\r\n      case 38:\r\n        this.setState({ direction: \"Up\" });\r\n        break;\r\n      case 39:\r\n        this.setState({ direction: \"Right\" });\r\n        break;\r\n      case 40:\r\n        this.setState({ direction: \"Down\" });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  moveSnake = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let headSnake = dots[dots.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case \"Left\":\r\n        headSnake = [headSnake[0] - 2, headSnake[1]];\r\n        break;\r\n      case \"Up\":\r\n        headSnake = [headSnake[0], headSnake[1] - 2];\r\n        break;\r\n      case \"Right\":\r\n        headSnake = [headSnake[0] + 2, headSnake[1]];\r\n        break;\r\n      case \"Down\":\r\n        headSnake = [headSnake[0], headSnake[1] + 2];\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    dots.push(headSnake);\r\n    dots.shift();\r\n    this.setState({\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  checkIfEat = () => {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      this.setState({\r\n        food: randomCoordinates()\r\n      });\r\n      this.enlargeSnake();\r\n      this.increaseSpeed();\r\n    }\r\n  };\r\n\r\n  enlargeSnake = () => {\r\n    let newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: newSnake\r\n    });\r\n  };\r\n\r\n  checkBorders = () => {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0)\r\n      this.gameOver();\r\n  };\r\n\r\n  checkCollapsed = () => {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n    snake.forEach(dot => {\r\n      if (head[0] === dot[0] && head[1] === dot[1]) {\r\n        this.gameOver();\r\n      }\r\n    });\r\n  };\r\n\r\n  increaseSpeed = () => {\r\n    if (this.state.speed >= 10) {\r\n      this.setState({\r\n        speed: this.state.speed - 5\r\n      });\r\n    }\r\n    console.log(this.state.speed);\r\n  };\r\n\r\n  gameOver = () => {\r\n    alert(`Game over. Snake length is ${this.state.snakeDots.length}`);\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav start={this.handleStart} stop={this.handleStop} />\r\n        <Snake snakeDots={this.state.snakeDots} />\r\n        <Food dot={this.state.food} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Start;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Start from \"./Start\";\n\nfunction App() {\n  return (\n    <div className=\"game-arena\">\n      <Start />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}